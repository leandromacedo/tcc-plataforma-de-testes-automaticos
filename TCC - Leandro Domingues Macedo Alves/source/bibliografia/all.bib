%
% This is file `coppe.bib'.
%
% Bibliographic references for the documentation.
%
% Copyright (C) 2011 CoppeTeX Project and any individual authors listed
% elsewhere in this file.
%
% This program is free software; you can redistribute it and/or modify
% it under the terms of the GNU General Public License version 3 as
% published by the Free Software Foundation.
%
% This program is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
% GNU General Public License version 3 for more details.
%
% You should have received a copy of the GNU General Public License
% version 3 along with this package (see COPYING file).
% If not, see <http://www.gnu.org/licenses/>.
%
% $URL: https://coppetex.svn.sourceforge.net/svnroot/coppetex/trunk/coppe.bib $
% $Id: coppe.bib 118 2008-10-18 14:17:06Z helano $
%
% Author(s): Vicente H. F. Batista
%            George O. Ainsworth Jr.
%

@book{software2008ieee,
  title={IEEE standard for software and system test documentation},
  author={Software \& Systems Engineering Standards Committee of the IEEE Computer Society},
  year={2008},
  publisher={IEEE}
}

@article{pham2003software,
  title={Software reliability and cost models: Perspectives, comparison, and practice},
  author={Pham, Hoang},
  journal={European Journal of Operational Research},
  volume={149},
  number={3},
  pages={475--489},
  year={2003},
  publisher={Elsevier}
}

@Article{abdel,
author = {Abdfel-Hamid, Tarek K.},
title = {The Economics of Software Quality Assurance: A Simulation-Based Case Study},
journal = {MIS Quarterly},
volume = {12},
number = {3},
pages = {395},
year = {1988},
abstract = {},
location = {},
keywords = {}}


@Article{chowdhury,
author = {Chowdhury, Arnab Roy},
title = {All You Need to Know About End to End Testing},
journal = {},
volume = {},
number = {},
pages = {},
year = {2018},
abstract = {},
location = {},
keywords = {}}


@Article{bacchelli,
author = {Bacchelli, Alberto and Bird, Christian},
editor = {},
title = {Expectations, outcomes, and challenges of modern code review Proceedings of the 2013 international conference on software engineering},
booktitle = {Expectations, outcomes, and challenges of modern code review Proceedings of the 2013 international conference on software engineering},
volume = {},
publisher = {IEEE Press},
address = {},
pages = {712-721},
year = {2013},
abstract = {},
keywords = {}}

@Book{beck1,
author = {Beck, Kent},
title = {Kent Beck’s Guide to Better Smalltalk},
volume = {},
pages = {408},
editor = {},
publisher = {Cambridge University Press},
address = {},
year = {1999},
abstract = {Written for Smalltalk programmers, this book is designed to help readers become more effective Smalltalk developers and object technology users.},
keywords = {Computers}}

@Book{beck2,
author = {Beck, Kent and Gamma, Erich},
title = {Extreme programming explained: embrace change},
volume = {},
pages = {},
editor = {},
publisher = {addison-wesley professional},
address = {},
year = {2000},
abstract = {Software development projects can be fun, productive, and even daring. Yet they can consistently deliver value to a business and remain under control. Extreme Programming (XP) was conceived and developed to address the specific needs of software development conducted by small teams in the face of vague and changing requirements. This new lightweight methodology challenges many conventional tenets, including the long-held assumption that the cost of changing a piece of software necessarily rises dramatically over …},
keywords = {}}

@Book{Berners-Lee,
author = {Berners-Lee, Tim},
title = {Weaving the Web: The Original Design and Ultimate Destiny of the World Wide Web by Its Inventor},
volume = {},
pages = {},
editor = {},
publisher = {Harper San Francisco},
address = {},
year = {1999},
abstract = {},
keywords = {}}

@Book{bourque,
author = {Bourque, Pierre and Fairley, Richard E and others},
title = {Guide to the software engineering body of knowledge (SWEBOK (R)): Version 3.0},
volume = {},
pages = {},
editor = {},
publisher = {IEEE Computer Society Press},
address = {},
year = {2014},
abstract = {},
keywords = {}}

@Book{brown,
author = {Brown, C Titus and Gheorghiu, Gheorghe and Huggins, Jason},
title = {An introduction to testing web applications with twill and selenium},
volume = {},
pages = {},
editor = {},
publisher = {“ O’Reilly Media, Inc.”},
address = {},
year = {2007},
abstract = {This Short Cut is an introduction tobuilding automated web tests using twotools, twill and Selenium. twill is a simpleweb scripting language that can be usedto automate web tests, while Selenium isa web testing framework that runs in anybrowser and can be used to test …},
keywords = {}}

@Article{atlas,
author = {Collaboration, The ATLAS},
title = {The ATLAS Experiment at the CERN Large Hadron Collider},
journal = {Journal of Instrumentation},
volume = {3},
number = {08},
pages = {S08003--S08003},
year = {2008},
abstract = {},
location = {},
keywords = {}}


@Article{lhcb,
author = {Collaboration, The LHCb},
title = {The LHCb Detector at the LHC},
journal = {Journal of Instrumentation},
volume = {3},
number = {08},
pages = {S08005--S08005},
year = {2008},
abstract = {},
location = {},
keywords = {}}


@Book{desikan,
author = {Desikan, Srinivasan},
title = {Software Testing},
volume = {},
pages = {486},
editor = {},
publisher = {Pearson Education India},
address = {},
year = {2006},
abstract = {“Software Testing: Principles and Practices is a comprehensive treatise on software testing. It provides a pragmatic view of testing, addressing emerging areas like extreme testing and ad hoc testing”--Resource description p.},
keywords = {Computer software}}

@Article{evans,
author = {Evans, Lyndon and Bryant, Philip},
title = {LHC Machine},
journal = {Journal of Instrumentation},
volume = {3},
number = {08},
pages = {S08001--S08001},
year = {2008},
abstract = {},
location = {},
keywords = {}}


@Article{fowler,
author = {Fowler, Martin and Foemmel, Matthew},
title = {Continuous integration, 2006},
journal = {URL http://martinfowler. com/articles/continuousIntegration. html},
volume = {},
number = {},
pages = {},
year = {2012},
abstract = {},
location = {},
keywords = {}}


@Book{gillies,
author = {Gillies, James},
title = {CERN and the Higgs Boson},
volume = {},
pages = {176},
editor = {},
publisher = {Icon Books},
address = {},
year = {2018},
abstract = {The Higgs boson is the rock star of fundamental particles, catapulting CERN, the laboratory where it was found, into the global spotlight. But what is it, why does it matter, and what exactly is CERN? In the late 1940s, a handful of visionaries were working to steer Europe towards a more peaceful future through science, and CERN, the European particle physics laboratory, was duly born. James Gillies tells the gripping story of particle physics, from the original atomists of ancient Greece, through the people who made the crucial breakthroughs, to CERN itself, one of the most ambitious scientific undertakings of our time, and its eventual confirmation of the Higgs boson. Weaving together the scientific and political stories of CERN’s development, the book reveals how particle physics has evolved from being the realm of solitary genius to a global field of human endeavour, with CERN’s Large Hadron Collider as its frontier research tool.},
keywords = {Science}}

@Article{grael,
author = {Grael, Felipe Fink},
title = {Sistema Glance: recuperação e processamento de grandes volumes de dados},
journal = {},
volume = {},
number = {},
pages = {},
year = {2009},
abstract = {O presente trabalho desenvolve o Glance, um sistema Web de recuperação e ope-ração de grandes massas de dados armazenados em bancos de dados dispersos. A motivação para o sistema veio das necessidades da colaboração internacional que construiu, e atualmente opera, o detector de partículas ATLAS, no CERN (European Organization for Nuclear Research). O ATLAS foi construído por um dos maiores esforços colaborativos do meio científico, envolvendo 172 institutos de 37 países e é composto por centenas de milhares de …},
location = {},
keywords = {}}


@Book{graham,
author = {Graham, Dorothy and Veenendaal, Erik Van and Evans, Isabel},
title = {Foundations of Software Testing},
volume = {},
pages = {258},
editor = {},
publisher = {Cengage Learning EMEA},
address = {},
year = {2008},
abstract = {Your One-Stop Guide To Passing The ISTQB Foundation Level ExamFoundations of Software Testing: Updated edition for ISTQB Certification is your essential guide to software testing and the ISTQB Foundation qualification. Whether you are a students or tester of ISTQB, this book is an essential purchase if you want to benefit from the knowledge and experience of those involved in the writing of the ISTQB Syllabus.This book adopts a practical and hands-on approach, covering the fundamental principles that every system and software tester should know. Each of the six sections of the syllabus is covered by backgroound tests, revision help and sample exam questions. The also contains a glossary, sample full-length examination and information on test certification. The authors are seasoned test-professionals and developers of the ISTQB syllabus itself, so syllabus coverage is thorough and in-depth. This book is designed to help you pass the ISTQB exam and qualify at Foundation Level, and is enhanced with many useful learning aids.ABOUT ISTQBISTQB is a multi-national body overseeing the development of international qualifications in software testing. In a world of employment mobility and multi-national organizations, having an internationally recognized qualification ensures that there is a common understanding, internationally, of software testing issues.},
keywords = {Computers}}

@Article{gupta,
author = {Gupta, Aakriti and Sharma, Shreta},
title = {Software Maintenance: Challenges and Issues},
journal = {Issues},
volume = {1},
number = {},
pages = {23--25},
year = {2015},
abstract = {Maintenance plays an important role in the software development life cycle. A software project is delivered within estimated time only if all the phases of software development process are completed within estimated and primarily set up time. Various researchers have made substantial tools and techniques to achieve the quality of software maintenance phase. But at the same time, the field requires a future research work to enhance the quality of software and to reduce the challenges of maintenance phase. It has been estimated that …},
location = {},
keywords = {}}


@Book{hambling,
author = {Hambling, Brian and Goethem, Pauline Van},
title = {User Acceptance Testing},
volume = {},
pages = {225},
editor = {},
publisher = {BCS, The Chartered Institute for IT},
address = {},
year = {2013},
abstract = {Every information system brought into service in every type of organisation requires user acceptance testing. This book is a hands-on manual for non-testing specialists to plan and carry out an effective acceptance test of an information system. It also identifies ways of making the process as simple and cost-effective as possible.},
keywords = {Business \& Economics}}

@Book{hamill,
author = {Hamill, Paul},
title = {Unit Test Frameworks},
volume = {},
pages = {198},
editor = {},
publisher = {“O’Reilly Media, Inc.”},
address = {},
year = {2004},
abstract = {Most people who write software have at least some experience with unit testing-even if they don’t call it that. If you have ever written a few lines of throwaway code just to try something out, you’ve built a unit test. On the other end of the software spectrum, many large-scale applications have huge batteries of test cases that are repeatedly run and added to throughout the development process. What are unit test frameworks and how are they used? Simply stated, they are software tools to support writing and running unit tests, including a foundation on which to build tests and the functionality to execute the tests and report their results. They are not solely tools for testing; they can also be used as development tools on a par with preprocessors and debuggers. Unit test frameworks can contribute to almost every stage of software development and are key tools for doing Agile Development and building big-free code. Unit Test Frameworks covers the usage, philosophy, and architecture of unit test frameworks. Tutorials and example code are platform-independent and compatible with Windows, Mac OS X, Unix, and Linux. The companion CD includes complete versions of JUnit, CppUnit, NUnit, and XMLUnit, as well as the complete set of code examples.},
keywords = {Computers}}

@Article{deiner,
author = {Deiner, Howard},
title = {The motivation behind continuous integration in embedded software development},
journal = {},
volume = {},
number = {},
pages = {},
year = {2011},
abstract = {},
location = {},
keywords = {}}


@Article{kaner,
author = {Kaner, Cem},
title = {A tutorial in exploratory testing},
journal = {Tutorial presented at QUEST2008.(Available online at: http://www. kaner. com/pdfs/QAIExploring. pdf, accessed: 26 Jan 2014)},
volume = {},
number = {},
pages = {},
year = {2008},
abstract = {Page 1. A Tutorial in Exploratory Testing April 2008 CKJD Ph D Cem Kaner, JD, Ph.D.Professor of Software Engineering Florida Institute of Technology Copyright (c) Cem Kaner2008 This work is licensed under the Creative Commons Attribution-ShareAlike License …},
location = {},
keywords = {}}


@Article{rungta,
author = {Rungta, Krishna},
title = {Types of Software Testing},
journal = {},
volume = {},
number = {},
pages = {},
year = {2019},
abstract = {},
location = {},
keywords = {}}

@Article{lange,
author = {Lange, Bruno and Maidantchik, Carmen and Pommes, Kathy and Pavani, Varlen and Arosa, Breno and Abreu, Igor},
title = {An object-oriented approach to deploying highly configurable Web interfaces for the ATLAS experiment},
journal = {Journal of Physics: Conference Series},
volume = {664},
number = {6},
pages = {062026},
year = {2015},
abstract = {},
location = {},
keywords = {}}


@Article{leung,
author = {Leung, Karl R. P. H. and Yeung, W. L.},
editor = {},
title = {Generating User Acceptance Test Plans from Test Cases},
booktitle = {Generating User Acceptance Test Plans from Test Cases},
volume = {},
publisher = {IEEE},
address = {},
pages = {},
year = {2007},
abstract = {},
keywords = {}}

@Article{leventhal,
author = {Leventhal, Laura Marie and Teasley, Barbee Eve and Rohlman, Diane Schertler},
title = {Analyses of factors related to positive test bias in software testing},
journal = {International Journal of Human-Computer Studies},
volume = {41},
number = {5},
pages = {717--749},
year = {1994},
abstract = {},
location = {},
keywords = {}}


@Article{maidantchik,
author = {Maidantchik, C and Grael, FF and Galvao, KK and Pommes, K},
title = {Glance project: a database retrieval mechanism for the ATLAS detector},
booktitle = {Glance project: a database retrieval mechanism for the ATLAS detector},
volume = {Journal of Physics: Conference Series 119(4)},
publisher = {IOP Publishing},
address = {},
pages = {042020},
year = {2008},
abstract = {During the construction and commissioning phases of the ATLAS detector, data related to the installation, placement, testing and performance of the equipment are stored in relational databases. Each group acquires and saves information in different servers, using diverse technologies, data modeling and terminologies. Installation and maintenance during the experiment construction and operation depends on the access to this information, as well as imply in its update. The development of retrieval and update systems for each data set …},
keywords = {}}

@Article{martin,
author = {Martin, Robert C},
title = {Design principles and design patterns},
journal = {Object Mentor},
volume = {1},
number = {34},
pages = {597},
year = {2000},
abstract = {What is software architecture? The answer is multitiered. At the highest level, there are the architecture patterns that define the overall shape and structure of software applications 1. Down a level is the architecture that is specifically related to the purpose of the software application. Yet another level down resides the architecture of the modules and their interconnections. This is the domain of design patterns 2, packakges, components, and classes. It is this level that we will concern ourselves with in this chapter.},
location = {},
keywords = {}}


@Article{mikkonen,
author = {Mikkonen, Tommi and Taivalsaari, Antero},
title = {Web Applications: Spaghetti code for the 21st century},
journal = {},
volume = {},
number = {},
pages = {},
year = {2007},
abstract = {The software industry is currently in the middle of a paradigm shift. Applications are increasingly written for the World Wide Web rather than for any specific type of an operating system, computer or device. Unfortunately, the technologies used for web application …},
location = {},
keywords = {}}


@Book{myers,
author = {},
title = {The Art of Software Testing},
volume = {},
pages = {},
editor = {Myers, Glenford J. and Badgett, Tom and Sandler, Corey},
publisher = {John Wiley \& Sons, Inc.},
address = {Hoboken, NJ, USA},
year = {2012},
abstract = {},
keywords = {}}

@Book{nguyen,
author = {Nguyen, Hung Q},
title = {Testing applications on the Web: Test planning for Internet-based systems},
volume = {},
pages = {},
editor = {},
publisher = {John Wiley \& Sons},
address = {},
year = {2001},
abstract = {A software testing survival guide for those who work in Internet time With Internet applications spreading like wildfire, the field of software testing is increasingly challenged by the brave new networked world of e-business. This book brings you up to speed on the …},
keywords = {}}

@Article{nielsen,
author = {Nielsen, Jakob and Landauer, Thomas K.},
editor = {},
title = {A mathematical model of the finding of usability problems},
booktitle = {A mathematical model of the finding of usability problems},
volume = {},
publisher = {ACM Press},
address = {New York, New York, USA},
pages = {},
year = {1993},
abstract = {},
keywords = {}}

@Article{nwana,
author = {Nwana, Hyacinth S and Lee, Lyndon C and Jennings, Nicholas R},
title = {Coordination in software agent systems},
journal = {British Telecom Technical Journal},
volume = {14},
number = {4},
pages = {79--88},
year = {1996},
abstract = {},
location = {},
keywords = {}}


@Article{panzl,
author = {Panzl, David J},
editor = {},
title = {Test procedures: A new approach to software verification},
booktitle = {Test procedures: A new approach to software verification},
volume = {Proceedings of the 2nd international conference on Software engineering},
publisher = {IEEE Computer Society Press},
address = {},
pages = {477-485},
year = {1976},
abstract = {A test procedure is a formal specification of test cases to be applied to one or more target program modules. Test procedures are executable. A process called the VERIFIER applies a test procedure to its target modules and produces an exception report indicating which test cases, if any, failed. Test procedures facilitate thorough software testing by allowing individual modules or arbitrary groups of modules to be thoroughly tested outside the environment in which they will eventually reside. Test procedures are complete, self …},
keywords = {}}

@Article{ramos,
author = {Ramos, Bruno Lange},
title = {Fence: uma abordagem orientada a objetos na concepção de sistemas web altamente configuráveis para os experimentos do CERN},
journal = {},
volume = {},
number = {},
pages = {},
year = {2015},
abstract = {No CERN, colaborações internacionais que reunem mais de 10 mil físicos, engenheiros e estudantes foram responsáveis pelo comissionamento e operação dos detectores de partículas acoplados ao LHC (Large Hadron Collider). Suas gerências empregam sistemas …},
location = {},
keywords = {}}

@techreport{cernrelat,
    title         = "{CERN Annual report 2018}",
    institution   = "CERN",
    address       = "Geneva",
    year          = "2019",
    url           = "http://cds.cern.ch/record/2671714",
    doi           = "10.17181/AnnualReport2018",
}

@Article{shahin,
author = {Shahin, Mojtaba and Babar, Muhammad Ali and Zhu, Liming},
title = {Continuous integration, delivery and deployment: a systematic review on approaches, tools, challenges and practices},
journal = {IEEE Access},
volume = {5},
number = {},
pages = {3909--3943},
year = {2017},
abstract = {Continuous practices, ie, continuous integration, delivery, and deployment, are the software development industry practices that enable organizations to frequently and reliably release new features and products. With the increasing interest in the literature on continuous practices, it is important to systematically review and synthesize the approaches, tools, challenges, and practices reported for adopting and implementing continuous practices. This paper aimed at systematically reviewing the state of the art of continuous practices to …},
location = {},
keywords = {}}


@Article{cernsitelhc,
author = {CERN, Site oficial do},
title = {LHC section},
journal = {CERN Official Website},
volume = {},
number = {},
pages = {},
year = {2019},
abstract = {},
location = {},
keywords = {}}


@Article{atlassite,
author = {ATLAS, Site oficial do},
title = {ATLAS Official Website - Collaboration section},
journal = {},
volume = {},
number = {},
pages = {},
year = {2019},
abstract = {},
location = {},
keywords = {}}


@Article{cernsiteabout,
author = {CERN, Site oficial do},
title = {CERN Official Website - About section},
journal = {},
volume = {},
number = {},
pages = {},
year = {2019},
abstract = {},
location = {},
keywords = {}}


@Article{cernsiteatlas,
author = {CERN, Site oficial do},
title = {CERN Official Website - ATLAS experiment section},
journal = {},
volume = {},
number = {},
pages = {},
year = {2019},
abstract = {},
location = {},
keywords = {}}


@Article{cernsitelhcb,
author = {CERN, Site oficial do},
title = {CERN Official Website - LHCb experiment section},
journal = {},
volume = {},
number = {},
pages = {},
year = {2019},
abstract = {},
location = {},
keywords = {}}


@Article{fence,
author = {Fence, Site oficial do},
title = {Fence Official Website - Main Page},
journal = {},
volume = {},
number = {},
pages = {},
year = {2019},
abstract = {},
location = {},
keywords = {}}


@Article{lhcbsite,
author = {LHCb, Site oficial do},
title = {LHCb Official Website - Collaboration section},
journal = {},
volume = {},
number = {},
pages = {},
year = {2019},
abstract = {},
location = {},
keywords = {}}


@Article{taipale,
author = {Taipale, Ossi and Kasurinen, Jussi and Karhu, Katja and Smolander, Kari},
title = {Trade-off between automated and manual software testing},
journal = {International Journal of System Assurance Engineering and Management},
volume = {2},
number = {},
pages = {114--125},
year = {2011},
abstract = {The study explores the current state of test automation in software testing organizations by focusing on the views and observations of managers, testers and developers in each organization. The case study was conducted in selected organizational units that develop and test technical software for industrial automation or telecommunication domains. The data was collected with 41 theme-based interviews in each unit. The interview data was analyzed qualitatively by using the grounded theory research method. It was found that …},
location = {},
keywords = {}}


@Book{tanenbaum,
author = {Tanenbaum, Andrew S. and Steen, Maarten van},
title = {Distributed Systems},
volume = {},
pages = {700},
editor = {},
publisher = {Createspace Independent Publishing Platform},
address = {},
year = {2016},
abstract = {This second edition of Distributed Systems, Principles \& Paradigms, covers the principles, advanced concepts, and technologies of distributed systems in detail, including: communication, replication, fault tolerance, and security. Intended for use in a senior/graduate level distributed systems course or by professionals, this text systematically shows how distributed systems are designed and implemented in real systems.},
keywords = {Distributed operating systems (Computers)}}

@Book{vora,
author = {Vora, Pawan},
title = {Web application design patterns},
volume = {},
pages = {},
editor = {},
publisher = {Morgan Kaufmann},
address = {},
year = {2009},
abstract = {},
keywords = {}}

@Article{yang,
author = {Yang, Qian and Li, J Jenny and Weiss, David M},
title = {A survey of coverage-based testing tools},
journal = {The Computer Journal},
volume = {52},
number = {5},
pages = {589--597},
year = {2009},
abstract = {},
location = {},
keywords = {}}


@Article{yuan,
author = {Yuan, Ding and Luo, Yu and Zhuang, Xin and Rodrigues, Guilherme Renna and Zhao, Xu and Zhang, Yongle and Jain, Pranay U and Stumm, Michael},
editor = {},
title = {Simple testing can prevent most critical failures: An analysis of production failures in distributed data-intensive systems},
booktitle = {Simple testing can prevent most critical failures: An analysis of production failures in distributed data-intensive systems},
volume = {11th {USENIX} Symposium on Operating Systems Design and Implementation ({OSDI} 14)},
publisher = {},
address = {},
pages = {249-265},
year = {2014},
abstract = {Large, production quality distributed systems still fail periodically, and do so sometimes catastrophically, where most or all users experience an outage or data loss. We present the result of a comprehensive study investigating 198 randomly selected, user-reported failures  …},
keywords = {}}

